# File produced by Kranc


if (timelevels == 1)
{
  STORAGE: evolved_group[1]
}
if (timelevels == 2)
{
  STORAGE: evolved_group[2]
}
if (timelevels == 3)
{
  STORAGE: evolved_group[3]
}

if (rhs_timelevels == 1)
{
  STORAGE: evolved_grouprhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: evolved_grouprhs[2]
}
if (rhs_timelevels == 3)
{
  STORAGE: evolved_grouprhs[3]
}

schedule SimpleWaveOpenCL_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule SimpleWaveOpenCL_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule initial_sine AT INITIAL
{
  LANG: C
  TAGS: Device=1
  READS:    grid::x
  WRITES:   SimpleWaveOpenCL::phi
  WRITES:   SimpleWaveOpenCL::pi
} "initial_sine"

schedule calc_rhs in MoL_CalcRHS
{
  LANG: C
  TAGS: Device=1
  READS:    SimpleWaveOpenCL::phi
  READS:    SimpleWaveOpenCL::pi
  WRITES:   SimpleWaveOpenCL::phirhs
  WRITES:   SimpleWaveOpenCL::pirhs
} "calc_rhs"

schedule SimpleWaveOpenCL_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: evolved_group
} "select boundary conditions"

schedule SimpleWaveOpenCL_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule SimpleWaveOpenCL_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule group ApplyBCs as SimpleWaveOpenCL_ApplyBCs in MoL_PostStep after SimpleWaveOpenCL_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"
