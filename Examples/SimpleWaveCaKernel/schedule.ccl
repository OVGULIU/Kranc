# File produced by Kranc


if (timelevels == 1)
{
  STORAGE: phi_g[1]
}
if (timelevels == 2)
{
  STORAGE: phi_g[2]
}
if (timelevels == 3)
{
  STORAGE: phi_g[3]
}

if (timelevels == 1)
{
  STORAGE: pi_g[1]
}
if (timelevels == 2)
{
  STORAGE: pi_g[2]
}
if (timelevels == 3)
{
  STORAGE: pi_g[3]
}

if (rhs_timelevels == 1)
{
  STORAGE: phi_grhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: phi_grhs[2]
}
if (rhs_timelevels == 3)
{
  STORAGE: phi_grhs[3]
}

if (rhs_timelevels == 1)
{
  STORAGE: pi_grhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: pi_grhs[2]
}
if (rhs_timelevels == 3)
{
  STORAGE: pi_grhs[3]
}

schedule SimpleWaveCaKernel_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule SimpleWaveCaKernel_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule SimpleWaveCaKernel_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule CAKERNEL_Launch_initial_sine AT INITIAL
{
  LANG: C
} "initial_sine"

schedule CAKERNEL_Launch_calc_rhs at EVOL
{
  LANG: C
  SYNC: phi_grhs
  SYNC: pi_grhs
} "calc_rhs"

schedule CAKERNEL_Launch_rk1 at EVOL after calc_rhs
{
  LANG: C
  SYNC: phi_g
} "rk1"

schedule SimpleWaveCaKernel_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: phi_g
  SYNC: pi_g
} "select boundary conditions"

schedule SimpleWaveCaKernel_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule group ApplyBCs as SimpleWaveCaKernel_ApplyBCs in MoL_PostStep after SimpleWaveCaKernel_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"

############################################################
#CAKERNEL AUTO GENERATED PART. DO NOT EDIT BELOW THIS POINT#
############################################################
