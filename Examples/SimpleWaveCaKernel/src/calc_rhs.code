#include "GenericFD.h"
#include "Differencing.h"

#define CCTK_GFINDEX3D(u,i,j,k) I3D(u,i,j,k)

CAKERNEL_calc_rhs_Begin_s
  
  /* Declare finite differencing variables */
  
  /* Include user-supplied include files */
  
  /* Initialise finite differencing variables */
  ptrdiff_t const di = 1;
  ptrdiff_t const dj = CCTK_GFINDEX3D(cctkGH,0,1,0) - CCTK_GFINDEX3D(cctkGH,0,0,0);
  ptrdiff_t const dk = CCTK_GFINDEX3D(cctkGH,0,0,1) - CCTK_GFINDEX3D(cctkGH,0,0,0);
  ptrdiff_t const cdi = sizeof(CCTK_REAL) * di;
  ptrdiff_t const cdj = sizeof(CCTK_REAL) * dj;
  ptrdiff_t const cdk = sizeof(CCTK_REAL) * dk;
  CCTK_REAL const dx = ToReal(CCTK_DELTA_SPACE(0));
  CCTK_REAL const dy = ToReal(CCTK_DELTA_SPACE(1));
  CCTK_REAL const dz = ToReal(CCTK_DELTA_SPACE(2));
  CCTK_REAL const dt = ToReal(CCTK_DELTA_TIME);
  CCTK_REAL const t = ToReal(cctk_time);
  CCTK_REAL const dxi = INV(dx);
  CCTK_REAL const dyi = INV(dy);
  CCTK_REAL const dzi = INV(dz);
  CCTK_REAL const khalf = 0.5;
  CCTK_REAL const kthird = 1/3.0;
  CCTK_REAL const ktwothird = 2.0/3.0;
  CCTK_REAL const kfourthird = 4.0/3.0;
  CCTK_REAL const keightthird = 8.0/3.0;
  CCTK_REAL const hdxi = 0.5 * dxi;
  CCTK_REAL const hdyi = 0.5 * dyi;
  CCTK_REAL const hdzi = 0.5 * dzi;
  
  /* Initialize predefined quantities */
  CCTK_REAL const p1o2dx = 0.5*INV(dx);
  CCTK_REAL const p1o2dy = 0.5*INV(dy);
  CCTK_REAL const p1o2dz = 0.5*INV(dz);
  CCTK_REAL const p1odx2 = INV(SQR(dx));
  CCTK_REAL const p1ody2 = INV(SQR(dy));
  CCTK_REAL const p1odz2 = INV(SQR(dz));
  
  /* Assign local copies of arrays functions */
  
  
  
  /* Calculate temporaries and arrays functions */
  
  /* Copy local copies back to grid functions */
  CAKERNEL_calc_rhs_Computations_Begin_s
    
    /* Assign local copies of grid functions */
    
    CCTK_REAL phiL = I3D(phi,0,0,0);
    CCTK_REAL piL = I3D(pi,0,0,0);
    
    
    /* Include user supplied include files */
    
    /* Precompute derivatives */
    CCTK_REAL const PDstandard2nd11phi = PDstandard2nd11(&phi[index]);
    CCTK_REAL const PDstandard2nd22phi = PDstandard2nd22(&phi[index]);
    CCTK_REAL const PDstandard2nd33phi = PDstandard2nd33(&phi[index]);
    
    /* Calculate temporaries and grid functions */
    CCTK_REAL phirhsL = piL;
    
    CCTK_REAL pirhsL = PDstandard2nd11phi + PDstandard2nd22phi + 
      PDstandard2nd33phi;
    
    /* Copy local copies back to grid functions */
    I3D(phirhs,0,0,0) = phirhsL;
    I3D(pirhs,0,0,0) = pirhsL;
    
  CAKERNEL_calc_rhs_Computations_End_s
  
CAKERNEL_calc_rhs_End_s
