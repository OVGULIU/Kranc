# File produced by Kranc


if (other_timelevels == 1)
{
  STORAGE: CB_group[1]
}

if (other_timelevels == 1)
{
  STORAGE: CEl_group[1]
}

if (other_timelevels == 1)
{
  STORAGE: rho_group[1]
}

if (timelevels == 1)
{
  STORAGE: B_group[1]
}
if (timelevels == 2)
{
  STORAGE: B_group[2]
}
if (timelevels == 3)
{
  STORAGE: B_group[3]
}

if (timelevels == 1)
{
  STORAGE: El_group[1]
}
if (timelevels == 2)
{
  STORAGE: El_group[2]
}
if (timelevels == 3)
{
  STORAGE: El_group[3]
}

if (rhs_timelevels == 1)
{
  STORAGE: B_grouprhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: B_grouprhs[2]
}
if (rhs_timelevels == 3)
{
  STORAGE: B_grouprhs[3]
}

if (rhs_timelevels == 1)
{
  STORAGE: El_grouprhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: El_grouprhs[2]
}
if (rhs_timelevels == 3)
{
  STORAGE: El_grouprhs[3]
}

schedule EMScript_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule EMScript_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule EMScript_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule EM_initial at initial
{
  LANG: C
} "EM_initial"

schedule EM_evol in MoL_CalcRHS
{
  LANG: C
} "EM_evol"

schedule EM_constraints at analysis
{
  LANG: C
} "EM_constraints"

schedule EM_energy at analysis
{
  LANG: C
} "EM_energy"

schedule EMScript_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: B_group
  SYNC: El_group
} "select boundary conditions"

schedule EMScript_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule group ApplyBCs as EMScript_ApplyBCs in MoL_PostStep after EMScript_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"
