# File produced by Kranc


STORAGE: F2rho_group[1]

STORAGE: Frho_group[1]

STORAGE: v_group[1]

if (timelevels == 1)
{
  STORAGE: rho_group[1]
}
if (timelevels == 2)
{
  STORAGE: rho_group[2]
}
if (timelevels == 3)
{
  STORAGE: rho_group[3]
}

if (rhs_timelevels == 1)
{
  STORAGE: rho_grouprhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: rho_grouprhs[2]
}
if (rhs_timelevels == 3)
{
  STORAGE: rho_grouprhs[3]
}

schedule Advect_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule Advect_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule Advect_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"


if (CCTK_EQUALS(initial_data, "sine"))
{
  schedule advect_initial_sine at CCTK_INITIAL as advect_initial
  {
    LANG: C
  } "advect_initial_sine"
}


if (CCTK_EQUALS(initial_data, "shock"))
{
  schedule advect_initial_shock at CCTK_INITIAL as advect_initial
  {
    LANG: C
  } "advect_initial_shock"
}

schedule advect_evol in MoL_CalcRHS
{
  LANG: C
} "advect_evol"

schedule advect_flux in MoL_PostStep after Advect_ApplyBCs
{
  LANG: C
} "advect_flux"

schedule Advect_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: rho_group
} "select boundary conditions"

schedule Advect_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule group ApplyBCs as Advect_ApplyBCs in MoL_PostStep after Advect_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"
