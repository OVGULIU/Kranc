skipper = \b([ \t\n\r]+|\#.*)*
int = -?[0-9]+
end = ([ \t]+|\#.*)*\r*\n
quote = "[^"]*"
type = real|integer|keyword|boolean
keywords = to|default|if|then|else|end|begin|and|or
barename = \b(?!D{keywords}\b)[A-Za-z][A-Za-z0-9]*
name = \b(?![DO]|{keywords}\b)[A-Za-z][A-Za-z0-9]*
bracket = \[ {expr} (, {expr} (, {expr} |)|)\]

uname = [A-Za-z][A-Za-z0-9_]*
lower_index = ({index_symbol}|\({index_expr}(,{index_expr})*\))
upper_index = ({index_symbol}|\({index_expr}(,{index_expr})*\))
indices = (\_{lower_index}+|\^{upper_index}+)*
index_symbol = [a-zA-Z]'*|[0-9]
index_op = [+-]
index_expr = {index_symbol}({index_op}{int}|)
tensor = {name}{indices}( {bracket}|)
tname = {tensor}|{name}
dname = [DO][a-z0-9]*
rawtext = ((?=\}\}){brk}|.)*
rawmath = @m\{\{{rawtext}\}\}
rawc = @c\{\{{rawtext}\}\}
dtensor = {dname}{indices}? {tensor}
number = -?[0-9]+(\.[0-9]*|)([eEdD][+-]?[0-9]+|)
fname = (a?sinh?|a?cosh?|a?tanh?|pow|exp|log|min|max|copysign|abs)
func = {fname} \( ({expr}( , {expr})*|) \)
neg = -
value = {neg}?({rawc}|{rawmath}|{func}|{dtensor}|{tensor}|{number}|{ifexpr}|\( {expr} \))
pow = {value}( \*\* {value}|)
mulop = [*/%]
mulimp = [ \t]*(?!-)
mul = {pow}( {mulop} {pow}|{mulimp}{pow})*
addop = [+-]
mexpr = {mul}( {addop} {mul})*
expr = {mexpr}
cmpop = (<=?|>=?|==|!=)
coexpr = {mexpr} {cmpop} {mexpr}|\( {cexpr} \)
logop = and|or
cexpr = {coexpr}( {logop} {coexpr})*
#ifexpr = {cexpr} \? {mexpr} : {mexpr} 
ifexpr = if {cexpr} then {mexpr} else {mexpr} 
eqn = ({dtensor}|{tensor}) \= {expr}{-end}
doper = {dname}{indices}
deqn = {doper} {barename} \= {expr}{-end}
eqns = {eqn}( {eqn})*
deqns = {deqn}( {deqn})*
at_or_in = (at|in)
on_clause = on {uname}
schedule = scheduled[ \t]+{at_or_in}[ \t]{uname}( {on_clause})?
calculation = begin[ \t]+calculation[ \t]+{uname}([ \t]+{schedule}){-end} {eqns} end[ \t]+calculation
variables = begin[ \t]+variables{-end} ( end[ \t]+variables\b{brk}| {tensor})*{-end}
parameters = begin[ \t]+parameters{-end} ( end[ \t]+parameters\b{brk}| {parameter})*{-end}
infinity = infinity
parlo = - {infinity}|{expr}
parhi = {infinity}|{expr}
parameter = {name}( : {type})( {quote}|)( , default : {expr}|)( , range : {parlo}[ \t]+to[ \t]+{parhi}|)
temporaries = begin[ \t]+temporaries{-end} ( end[ \t]+temporaries\b{brk}| {tname})*{-end}
option = {inherit}|{use}|{disable}|{implement}
inherit = inherit[ \t]+({uname}[ \t]*)+{-end}
feature = loopcontrol|vectors|opencl|jacobian|cse|cakernel
use = use[ \t]+({feature}[ \t]*)+
disable = disable[ \t]+({feature}[ \t]*)+
implement = implement[ \t]+{uname}{-end}
operators = begin[ \t]+operators{-end} {deqns} end[ \t]+operators
thorn = {-skipper}begin[ ]+thorn {uname}{-end}( {calculation}| {parameters}| {variables}| {temporaries}| {operators}| {option})* end[ ]+thorn
